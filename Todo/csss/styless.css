*{
    margin: 0;
    padding: 0;
    font-family: sans-serif;
    box-sizing: border-box;

}

.container{
    width: 100%;
    min-height: 100vh;
    background: linear-gradient(135deg,#153677,#4e085f);
    padding: 10px;
}

.todo-app{
    width: 100%;
    max-width: 540px;
    background: #fff;
    margin: 100px auto 20px;  /*100px from top auto from left right and 20px from bottom*/
    padding: 40px 60px 70px; /*40px from top 60px from left right and 70px from bottom */
    border-radius: 10px;
}

.todo-app h2{
    color: #002765;
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    
}

.todo-app h2 img{
    width: 30px;
    margin-left: 10px;
}

.row{
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #edeef0;
    border-radius: 30px;
    padding-left: 20px;
    margin-bottom: 25px;
}

input{
    flex:1; /* The flex: 1 shorthand is a powerful and concise way to make flex items equally share available space within a flex container, making layouts responsive and adaptable to different screen sizes.*/
    border: none;
    outline: none;
    background: transparent;
    padding: 10px;
    font-size: 14px;
}

button{
    border: none;
    outline: none;
    padding: 16px 50px; /*16px is the padding for the top and bottom. 50px is the padding for the left and right.*/
    background: #ff5945;
    color: #fff;
    font-size: 16px;
    cursor: pointer;
    border-radius: 50px;
}

ul li{
    list-style: none;  /* Removes the default bullets */
    font-size: 17px;
    padding: 12px 8px 12px 50px;
    user-select: none; /* Prevents text selection or copy on double click*/
    cursor: pointer;
    position: relative;
    
}

ul li::before{
    content: ''; /*This property is required for pseudo-elements like ::before and ::after. It specifies what content to insert. In this case, an empty string is used because we're only interested in the visual effect provided by other styles.*/
    position: absolute; /*This positions the pseudo-element absolutely within the closest positioned ancestor. Usually, you would set the parent <li> to position: relative; to ensure the pseudo-element is positioned correctly relative to the list item.*/
    height: 25px;
    width: 25px;
    border-radius: 50px;
    background-image: url('../images/unchecked.png');
    background-size: cover; /*This ensures that the background image covers the entire area of the pseudo-element, maintaining the aspect ratio.*/
    background-position: center ; /*This centers the background image within the pseudo-element.*/
    top: 10px; /*moves the element down 10 pixels from the top edge of its nearest positioned ancestor*/
    left: 8px;
}

ul li.checked{
    color: #555;
    text-decoration: line-through;
}

ul li.checked::before{
    background-image: url('../images/checked.png');
}
    
ul li span{
    position: absolute;
    right: 0px;
    top: 5px;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 22px;
    color: #555;
    line-height: 40px;
    text-align: center;

}

ul li span:hover{
    background: #edeef0;
} 